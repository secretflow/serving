# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: secretflow_serving/protos/op.proto
# Protobuf Python Version: 4.25.6
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import symbol_database as _symbol_database
from google.protobuf.internal import builder as _builder
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from secretflow_serving_lib.secretflow_serving.protos import attr_pb2 as secretflow__serving_dot_protos_dot_attr__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\"secretflow_serving/protos/op.proto\x12\x15secretflow.serving.op\x1a$secretflow_serving/protos/attr.proto\"#\n\x05IoDef\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\x0c\n\x04\x64\x65sc\x18\x02 \x01(\t\"\\\n\x05OpTag\x12\x12\n\nreturnable\x18\x01 \x01(\x08\x12\x11\n\tmergeable\x18\x02 \x01(\x08\x12\x13\n\x0bsession_run\x18\x03 \x01(\x08\x12\x17\n\x0fvariable_inputs\x18\x05 \x01(\x08\"\xea\x01\n\x05OpDef\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\x0c\n\x04\x64\x65sc\x18\x02 \x01(\t\x12\x0f\n\x07version\x18\x03 \x01(\t\x12)\n\x03tag\x18\x04 \x01(\x0b\x32\x1c.secretflow.serving.op.OpTag\x12,\n\x06inputs\x18\x06 \x03(\x0b\x32\x1c.secretflow.serving.op.IoDef\x12,\n\x06output\x18\x07 \x01(\x0b\x32\x1c.secretflow.serving.op.IoDef\x12-\n\x05\x61ttrs\x18\x08 \x03(\x0b\x32\x1e.secretflow.serving.op.AttrDefb\x06proto3')

_globals = globals()
_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, _globals)
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'secretflow_serving.protos.op_pb2', _globals)
if _descriptor._USE_C_DESCRIPTORS == False:
  DESCRIPTOR._options = None
  _globals['_IODEF']._serialized_start=99
  _globals['_IODEF']._serialized_end=134
  _globals['_OPTAG']._serialized_start=136
  _globals['_OPTAG']._serialized_end=228
  _globals['_OPDEF']._serialized_start=231
  _globals['_OPDEF']._serialized_end=465
# @@protoc_insertion_point(module_scope)
