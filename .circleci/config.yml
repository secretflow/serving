# Copyright 2023 Ant Group Co., Ltd.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

version: 2.1

setup: true

parameters:
  GHA_Actor:
    type: string
    default: ""
  GHA_Action:
    type: string
    default: ""
  GHA_Event:
    type: string
    default: ""
  GHA_Meta:
    type: string
    default: ""

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs
jobs:
  lint:
    # Use machine executor for convenient data sharing between the host and docker-compose cluster
    docker:
      - image: secretflow/lint-ci:latest
    resource_class: medium
    shell: /bin/bash --login -eo pipefail
    steps:
      - checkout
      - run:
          name: Checkout devtools
          command: git clone https://github.com/secretflow/devtools.git ../devtools
      - run:
          name: Whitespace check
          command: bash ../devtools/lint-whitespace.sh
  linux_ut:
    # Specify the execution environment. You can specify an image from Dockerhub or use one of our Convenience Images from CircleCI's Developer Hub.
    # See: https://circleci.com/docs/2.0/configuration-reference/#docker-machine-macos-windows-executor
    docker:
      - image: secretflow/ubuntu-base-ci:latest
    resource_class: 2xlarge
    shell: /bin/bash --login -eo pipefail
    # Add steps to the job
    # See: https://circleci.com/docs/2.0/configuration-reference/#steps
    steps:
      # Kill the whole ci after 1hr
      - run:
          name: Cancel build after set time
          background: true
          command: |
            sleep 3600
            echo "Canceling workflow as too much time has elapsed"
            curl -X POST --header "Content-Type: application/json" "https://circleci.com/api/v2/workflow/${CIRCLE_WORKFLOW_ID}/cancel?circle-token=${BUILD_TIMER_TOKEN}"
      - checkout
      - run:
          name: Checkout devtools
          command: git clone https://github.com/secretflow/devtools.git ../devtools
      - run:
          name: "build"
          command: |
            source ~/miniconda3/bin/activate py3.8

            python3 -m pip install -r requirements.txt
            python3 -m pip install -r .ci/requirements-ci.txt

            bazel build //... -c opt --ui_event_filters=-info,-debug,-warning --jobs 16

            sh ./build_wheel_entrypoint.sh
      - run:
          name: "test"
          command: |
            set +e
            declare -i test_status
            bazel test //secretflow_serving/... -c opt --ui_event_filters=-info,-debug,-warning --test_output=errors | tee test_result.log; test_status=${PIPESTATUS[0]}

            sh ../devtools/rename-junit-xml.sh
            find bazel-bin/ -executable -type f -name "*_test"  -print0 | xargs -0 tar -cvzf test_binary.tar.gz
            find bazel-testlogs/ -type f -name "test.log"  -print0 | xargs -0 tar -cvzf test_logs.tar.gz

            exit ${test_status}
      - run:
          name: "integration test"
          command: |
            set +e
            source ~/miniconda3/bin/activate py3.8

            declare -i test_status

            python3 .ci/integration_test.py 2>&1 | tee integration_test.log; test_status=${PIPESTATUS[0]}

            exit ${test_status}
      - run:
          name: "accuracy test"
          command: |
            set +e
            source ~/miniconda3/bin/activate py3.8

            declare -i test_status

            python3 .ci/accuracy_test.py 2>&1 | tee accuracy_test.py.log; test_status=${PIPESTATUS[0]}

            exit ${test_status}
      - store_test_results:
          path: test-results
      - store_artifacts:
          path: test_binary.tar.gz
      - store_artifacts:
          path: test_logs.tar.gz
      - store_artifacts:
          path: integration_test.log

workflows:
  unittest-workflow:
    jobs:
      - linux_ut
      - lint
