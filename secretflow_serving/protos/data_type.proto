// Copyright 2023 Ant Group Co., Ltd.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//   http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//

syntax = "proto3";

package secretflow.serving;

// Mapping arrow::DataType
// `https://arrow.apache.org/docs/cpp/api/datatype.html`.
enum DataType {
  // Placeholder for proto3 default value, do not use it.
  UNKNOWN_DT_TYPE = 0;

  // Boolean as 1 bit, LSB bit-packed ordering.
  DT_BOOL = 1;
  // Unsigned 8-bit little-endian integer.
  DT_UINT8 = 2;
  // Signed 8-bit little-endian integer.
  DT_INT8 = 3;
  // Unsigned 16-bit little-endian integer.
  DT_UINT16 = 4;
  // Signed 16-bit little-endian integer.
  DT_INT16 = 5;
  // Unsigned 32-bit little-endian integer.
  DT_UINT32 = 6;
  // Signed 32-bit little-endian integer.
  DT_INT32 = 7;
  // Unsigned 64-bit little-endian integer.
  DT_UINT64 = 8;
  // Signed 64-bit little-endian integer.
  DT_INT64 = 9;
  // 4-byte floating point value
  DT_FLOAT = 11;
  // 8-byte floating point value
  DT_DOUBLE = 12;
  // UTF8 variable-length string as List<Char>
  DT_STRING = 13;
  // Variable-length bytes (no guarantee of UTF8-ness)
  DT_BINARY = 14;
}
