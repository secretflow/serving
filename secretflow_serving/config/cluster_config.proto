// Copyright 2023 Ant Group Co., Ltd.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//   http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//

syntax = "proto3";

package secretflow.serving;

import "secretflow_serving/config/tls_config.proto";

// Description for channels between joined parties
message ChannelDesc {
  // https://github.com/apache/brpc/blob/master/docs/en/client.md#protocols
  string protocol = 1;

  // Max duration of RPC. -1 means wait indefinitely.
  // Default: 2000 (ms)
  int32 rpc_timeout_ms = 2;

  // Max duration for a connect.  -1 means wait indefinitely.
  // Default: 500 (ms)
  int32 connect_timeout_ms = 3;

  // TLS related config.
  TlsConfig tls_config = 4;

  // When the server starts, model information from all parties will be
  // collected. At this time, the remote servers may not have started yet, and
  // we need to retry. And if we connect gateway,the max waiting time for each
  // operation will be rpc_timeout_ms + handshake_retry_interval_ms.
  // Maximum number of retries, default: 60
  int32 handshake_max_retry_cnt = 5;

  // time between retries, default: 5000ms
  int32 handshake_retry_interval_ms = 6;
}

// Description for a joined party
message PartyDesc {
  // Unique id of the party
  string id = 1;

  // e.g. 127.0.0.1:9001
  string address = 2;

  // Optional. Address will be used if listen_address is empty.
  string listen_address = 3;
}

// Runtime config for a serving cluster
message ClusterConfig {
  repeated PartyDesc parties = 1;

  string self_id = 2;

  ChannelDesc channel_desc = 3;
}
