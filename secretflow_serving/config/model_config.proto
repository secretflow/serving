// Copyright 2023 Ant Group Co., Ltd.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//   http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//

syntax = "proto3";

package secretflow.serving;

// Supported model source type
enum SourceType {
  // Placeholder for proto3 default value, do not use it.
  INVALID_SOURCE_TYPE = 0;

  // Local filesystem
  ST_FILE = 1;
  // OSS/AWS S3
  ST_OSS = 2;
}

message FileSourceMeta {
  // empty by design
}

// Options for a Oss model source. Serving accesses data services using the AWS
// S3 protocol.
message OSSSourceMeta {
  // Bucket access key
  string access_key = 1;

  // Bucket secret key
  string secret_key = 2;

  // Whether to use virtual host mode,
  // https://docs.aws.amazon.com/AmazonS3/latest/userguide/VirtualHosting.html
  bool virtual_hosted = 3;

  string endpoint = 4;

  string bucket = 5;
}

// Config for serving model
message ModelConfig {
  // Unique id of the model package
  string model_id = 1;

  // Path used to cache and load model package
  string base_path = 2;

  // Represent the path of the model package in the model source
  string source_path = 3;

  // Optional.
  // The expect sha256 of the model package
  string source_sha256 = 4;

  SourceType source_type = 5;
  oneof kind {
    FileSourceMeta file_source_meta = 6;
    OSSSourceMeta oss_source_meta = 7;
  }
}
