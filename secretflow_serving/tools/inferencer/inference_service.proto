// Copyright 2024 Ant Group Co., Ltd.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//   http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//

syntax = "proto3";

package secretflow.serving.tools;

import "secretflow_serving/apis/status.proto";

option cc_generic_services = true;

enum ControlMessageType {
  INVALID_MESSAGE_TYPE = 0;

  CM_INIT = 1;

  CM_STOP = 2;

  CM_KEEPALIVE = 3;
}

message InitMsg {
  int32 row_num = 1;
}

message ControlRequest {
  string party_id = 1;

  ControlMessageType type = 2;
}

message ControlResponse {
  apis.Status status = 1;

  oneof kind {
    InitMsg init_msg = 3;
  }
}

service InferenceControlService {
  rpc Push(ControlRequest) returns (ControlResponse);
}
